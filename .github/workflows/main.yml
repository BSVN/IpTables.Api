# ITNOA
# Based on https://github.com/flcdrg/VsShowMissing

name: CI


# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  DOTNET_VERSION: '6.0.412' # The .NET SDK version to use

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-test:
    name: build-and-test-${{matrix.os}}
    strategy:
      matrix:
        include: 
          - solution: BSN.IpTables.Api.sln
            os: [windows-2022, ubuntu-latest]
            artifact: VS2022

    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    outputs:
      GitAssemblyInformationalVersion: ${{ steps.gitversion.outputs.GitAssemblyInformationalVersion }}
      GitBuildVersion: ${{ steps.gitversion.outputs.GitBuildVersion }}
      GitBuildVersionSimple: ${{ steps.gitversion.outputs.GitBuildVersionSimple }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }} 

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      id: build
      run: dotnet build --configuration Release --no-restore

    - name: gitversion
      id: gitversion
      run: |
        dir env:
        
        echo "::set-output name=GitAssemblyInformationalVersion::$($env:GitAssemblyInformationalVersion)"
        echo "::set-output name=GitBuildVersion::$($env:GitBuildVersion)"
        echo "::set-output name=GitBuildVersionSimple::$($env:GitBuildVersionSimple)"

    - name: Test
      run: dotnet test --no-restore --verbosity normal --logger trx --results-directory Build/artifacts

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3
      with:
        # Artifact name
        name: Test Results
        # A file, directory or wildcard pattern that describes what to upload
        path: 'Build/artifacts/*.xml'


    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"

  update_release_draft:
    name: Update release draft
    runs-on: ubuntu-latest
    needs: [build]
    env:
      GitAssemblyInformationalVersion: ${{ needs.build.outputs.GitAssemblyInformationalVersion }}
      GitBuildVersion: ${{ needs.build.outputs.GitBuildVersion }}
      GitBuildVersionSimple: ${{ needs.build.outputs.GitBuildVersionSimple }}

    if: github.ref == 'refs/heads/main' # Running this job only for master branch
    steps:
      - uses: actions/checkout@v3

      - uses: release-drafter/release-drafter@v5
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ needs.build.outputs.GitBuildVersionSimple }}
